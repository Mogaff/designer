/**
 * Render the Gemini-generated flyer content and take a screenshot
 */
export async function renderFlyerFromGemini(options: GenerationOptions): Promise<Buffer> {
  log("Starting Gemini-powered flyer generation", "gemini");
  
  try {
    // Generate the flyer content using Gemini AI
    const { htmlContent, cssStyles } = await generateFlyerContent(options);
    
    // Create a complete HTML document with the generated content
    // Add background image styling if an image was provided
    const backgroundStyle = options.backgroundImageBase64 
      ? `
          html, body {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
          }
          body {
            background-image: url('data:image/jpeg;base64,${options.backgroundImageBase64}');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            min-height: 100vh;
            position: relative; /* Support for absolute positioning */
          }
          /* Ensure content uses full viewport height */
          main, div, section {
            min-height: 100%;
            width: 100%;
          }
          /* Force content to fill the entire page */
          .main-content {
            min-height: 100vh;
            width: 100vw;
            position: relative;
          }
        `
      : `
          html, body {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
          }
          body {
            min-height: 100vh;
            position: relative; /* Support for absolute positioning */
          }
          /* Ensure content uses full viewport height */
          main, div, section {
            min-height: 100%;
            width: 100%;
          }
          /* Force content to fill the entire page */
          .main-content {
            min-height: 100vh;
            width: 100vw;
            position: relative;
          }
        `;
        
    // Add logo styling if a logo was provided
    const logoStyle = options.logoBase64
      ? `
          /* Logo styling - positioned absolutely as directed by prompt */
          .logo-container {
            display: block;
            position: absolute; /* Allow placing anywhere on canvas */
          }
          .logo-image {
            max-width: 100%;
            height: auto;
            position: absolute; /* Can be placed anywhere */
          }
          #company-logo {
            content: url('data:image/jpeg;base64,${options.logoBase64}');
            max-width: 200px;
            max-height: 100px;
            object-fit: contain;
            position: absolute; /* Allow creative freedom in placement */
          }
          
          /* Support all Tailwind positioning classes for logos and elements */
          [class*="logo"], img, .logo-container, #company-logo, .logo-image {
            position: absolute !important;
          }
        `
      : '';
        
    const fullHtml = `
      <!DOCTYPE html>
      <html lang="en">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Gemini Generated Flyer</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=Montserrat:wght@100..900&family=Raleway:wght@100..900&family=Poppins:wght@100..900&display=swap" rel="stylesheet">
        <script>
          tailwind.config = {
            theme: {
              extend: {
                animation: {
                  'gradient': 'gradient 8s ease infinite',
                  'float': 'float 6s ease-in-out infinite',
                  'pulse-slow': 'pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite',
                  'slide-in': 'slideIn 1s ease-out forwards',
                  'fade-in': 'fadeIn 1.2s ease-out forwards',
                  'scale-in': 'scaleIn 0.8s cubic-bezier(0.17, 0.67, 0.83, 0.67) forwards',
                },
                keyframes: {
                  gradient: {
                    '0%, 100%': { backgroundPosition: '0% 50%' },
                    '50%': { backgroundPosition: '100% 50%' },
                  },
                  float: {
                    '0%, 100%': { transform: 'translateY(0)' },
                    '50%': { transform: 'translateY(-10px)' },
                  },
                  slideIn: {
                    '0%': { transform: 'translateX(-100%)', opacity: 0 },
                    '100%': { transform: 'translateX(0)', opacity: 1 },
                  },
                  fadeIn: {
                    '0%': { opacity: 0 },
                    '100%': { opacity: 1 },
                  },
                  scaleIn: {
                    '0%': { transform: 'scale(0.8)', opacity: 0 },
                    '100%': { transform: 'scale(1)', opacity: 1 },
                  }
                },
                fontFamily: {
                  'sans': ['Inter', 'ui-sans-serif', 'system-ui'],
                  'montserrat': ['Montserrat', 'ui-sans-serif', 'system-ui'],
                  'raleway': ['Raleway', 'ui-sans-serif', 'system-ui'],
                  'poppins': ['Poppins', 'ui-sans-serif', 'system-ui']
                }
              }
            }
          }
        </script>
        <style>
          ${backgroundStyle}
          ${logoStyle}
          
          /* Reset to ensure flyer fills entire canvas */
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }
          
          html, body {
            width: 100%;
            height: 100%;
            overflow: hidden;
            position: relative;
            font-family: 'Montserrat', sans-serif;
          }
          
          /* Force all content to fill entire available space */
          .flyer-container {
            position: absolute !important;
            top: 0 !important;
            left: 0 !important;
            width: 100% !important;
            height: 100% !important;
            overflow: hidden !important;
          }
          
          /* Ensure no rotated text */
          h1, h2, h3, h4, h5, h6, p, span, div, li, a, strong, em, label, blockquote, caption, button, text {
            transform: none !important;
            rotate: 0deg !important;
            transform-origin: center !important;
          }
          
          /* Custom styling from Gemini, if any */
          ${cssStyles}
        </style>
      </head>
      <body>
        <div class="flyer-container" style="position: absolute; inset: 0; width: 100%; height: 100%;">
          ${htmlContent}
        </div>
      </body>
      </html>
    `;
    
    // Save the HTML to a temporary file
    const tempDir = path.resolve(process.cwd(), "temp");
    if (!fs.existsSync(tempDir)) {
      fs.mkdirSync(tempDir, { recursive: true });
    }
    
    const htmlPath = path.join(tempDir, `gemini-flyer-${Date.now()}.html`);
    fs.writeFileSync(htmlPath, fullHtml);
    log(`Saved generated HTML to: ${htmlPath}`, "gemini");
    
    // Get Chromium executable path
    const { stdout: chromiumPath } = await execAsync("which chromium");
    log(`Found Chromium at: ${chromiumPath.trim()}`, "gemini");
    
    // Launch puppeteer
    const browser = await puppeteer.launch({
      headless: true,
      args: [
        "--no-sandbox", 
        "--disable-setuid-sandbox",
        "--disable-dev-shm-usage",
        "--disable-gpu"
      ],
      executablePath: chromiumPath.trim(),
    });
    
    try {
      const page = await browser.newPage();
      
      // Set viewport based on aspect ratio
      let viewportWidth = 1200;
      let viewportHeight = 1200;
      
      // Apply different size based on aspect ratio
      if (options.aspectRatio) {
        log(`Using aspect ratio: ${options.aspectRatio}`, "gemini");
        
        switch(options.aspectRatio) {
          // Square formats
          case 'original': viewportWidth = 1080; viewportHeight = 1080; break;
          case 'profile': viewportWidth = 1080; viewportHeight = 1080; break;
          case 'post': viewportWidth = 1200; viewportHeight = 1200; break;
          case 'square_ad': viewportWidth = 250; viewportHeight = 250; break;
            
          // Landscape formats
          case 'fb_cover': viewportWidth = 820; viewportHeight = 312; break;
          case 'twitter_header': viewportWidth = 1500; viewportHeight = 500; break;
          case 'yt_thumbnail': viewportWidth = 1280; viewportHeight = 720; break;
          case 'linkedin_banner': viewportWidth = 1584; viewportHeight = 396; break;
          case 'instream': viewportWidth = 1920; viewportHeight = 1080; break;
            
          // Portrait formats
          case 'stories': viewportWidth = 1080; viewportHeight = 1920; break;
          case 'pinterest': viewportWidth = 1000; viewportHeight = 1500; break;
            
          // Display Ad formats
          case 'leaderboard': viewportWidth = 728; viewportHeight = 90; break;
          case 'skyscraper': viewportWidth = 160; viewportHeight = 600; break;
          
          default: break;
        }
      }
      
      await page.setViewport({
        width: viewportWidth,
        height: viewportHeight,
        deviceScaleFactor: 2,
      });
      
      // Load the HTML file
      await page.goto(`file://${htmlPath}`, { waitUntil: 'networkidle0' });
      
      // Take screenshot
      log("Taking screenshot of the Gemini-generated flyer", "gemini");
      const screenshot = await page.screenshot({
        type: "png",
        fullPage: true,
      });
      
      // Convert Uint8Array to Buffer
      const buffer = Buffer.from(screenshot);
      
      // Clean up the temporary HTML file
      fs.unlinkSync(htmlPath);
      
      return buffer;
    } finally {
      await browser.close();
      log("Puppeteer browser closed", "gemini");
    }
  } catch (error) {
    log(`Error generating flyer: ${error}`, "gemini");
    throw error;
  }
}